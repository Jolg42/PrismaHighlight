%YAML 1.2
---
file_extensions:
  - prisma
scope: source.prisma

variables:

  field_types: |-
    (?x:
      String|Boolean|Int|BigInt|Float|Decimal|DateTime|Json|Bytes|Unsupported
    )

  attribute_functions: |-
    (?x:
      autoincrement|cuid|uuid|now|dbgenerated
    )

  attributes: |-
    (?x:
      id|default|unique|index|relation|map|updatedAt|map
    )

contexts:

  prototype:
    - include: comment

  comment:
    - match: \/{2}
      scope: punctuation.definition.comment.prisma
      push: comment_body

  comment_body:
    - meta_scope: comment.line.prisma
    - match: $
      pop: 1

  else_pop:
    - match: (?=\S)
      pop: 1

  immediately_pop:
    - match: ''
      pop: 1

  main:
    - include: primitives
    - include: generator
    - include: datasource
    - include: model

  attributes:
    - match: (\@{1,2})({{attributes}})
      captures:
        1: punctuation.definition.annotation.prisma
        2: variable.annotation.prisma
      push: maybe_attributes_body

  maybe_attributes_body:
    - match: (?=\()
      set: attributes_body_start
    - include: else_pop

  attributes_body_start:
    - match: \(
      scope: punctuation.section.block.begin.prisma
      set: attributes_body_end

  attributes_body_end:
    - match: \)
      scope: punctuation.section.block.end.prisma
      pop: 1

  model:
    - match: \bmodel\b
      scope: keyword.declaration.model.prisma
      push:
        - meta_model
        - model_body_begin
        - model_identifier

  meta_model:
    - meta_scope: meta.model.prisma
    - include: immediately_pop

  model_body_begin:
    - match: \{
      scope: punctuation.section.block.begin.prisma
      set: model_body_end
    - include: else_pop

  model_body_end:
    - match: \}
      scope: punctuation.section.block.end.prisma
      pop: 1
    - include: attributes
    - include: field_type
    - include: primitives

  model_identifier:
    - match: '[A-Za-z][A-Za-z0-9_]*'
      scope: entity.name.model.prisma
    - include: else_pop

  field_type:
    - match: ({{field_types}})(?:(\[)(\])|(\?))?
      captures:
        1: keyword.other.field.prisma
        2: punctuation.definition.modifier.begin.prisma
        3: punctuation.definition.modifier.end.prisma
        4: punctuation.definition.modifier.prisma

  datasource:
    - match: \bdatasource\b
      scope: keyword.declaration.datasource.prisma
      push:
        - meta_datasource
        - generator_datasource_body_begin
        - datasource_identifier

  meta_datasource:
    - meta_scope: meta.datasource.prisma
    - include: immediately_pop

  datasource_identifier:
    - match: \w+
      scope: entity.name.datasource.prisma
    - include: else_pop

  generator:
    - match: \bgenerator\b
      scope: keyword.declaration.generator.prisma
      push:
        - meta_generator
        - generator_datasource_body_begin
        - generator_identifier

  meta_generator:
    - meta_scope: meta.generator.prisma
    - include: immediately_pop

  generator_identifier:
    - match: \w+
      scope: entity.name.generator.prisma
    - include: else_pop

  generator_datasource_body_begin:
    - match: \{
      scope: punctuation.section.block.begin.prisma
      set: generator_datasource_body_end
    - include: else_pop

  generator_datasource_body_end:
    - match: \}
      scope: punctuation.section.block.end.prisma
      pop: 1
    - include: primitives

  primitives:
    - include: single_quoted_string
    - include: double_quoted_string

  single_quoted_string:
    - match: \'
      scope: punctuation.definition.string.begin.prisma
      push: single_quoted_string_body

  single_quoted_string_body:
    - meta_scope: meta.string.prisma string.quoted.single.prisma
    - match: \'
      scope: punctuation.definition.string.end.prisma
      pop: 1

  double_quoted_string:
    - match: \"
      scope: punctuation.definition.string.begin.prisma
      push: double_quoted_string_body

  double_quoted_string_body:
    - meta_scope: meta.string.prisma string.quoted.double.prisma
    - match: \"
      scope: punctuation.definition.string.end.prisma
      pop: 1
